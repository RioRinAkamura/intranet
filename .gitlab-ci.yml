.env dev: &env_dev
  environment:
    name: dev
    url: https://intranet.dev2.hdwebsoft.co

.var dev: &var_dev
  variables:
    SSH_HOST: $DEV_HOST
    SSH_USER: $DEV_SSH_USER
    SSH_PKEY: $DEV_SSH_KEY
    PROJECT_ROOT: '~/data/intranet'
    ENV_FILE: '.env.development'
    DOCKER_IMAGE: 'hdwhub/intranet-frontend:dev'
    STACK_NAME: 'intranet-dev'

.env prod: &env_prod
  environment:
    name: prod
    url: https://intranet.hdwebsoft.co

.var prod: &var_prod
  variables:
    SSH_HOST: $PROD_HOST
    SSH_USER: $PROD_SSH_USER
    SSH_PKEY: $PROD_SSH_KEY
    PROJECT_ROOT: '/mnt/nfs/intranet'
    ENV_FILE: '.env.production'
    DOCKER_IMAGE: 'hdwhub/intranet-frontend:latest'
    STACK_NAME: 'intranet'

.setup ssh: &setup_ssh
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - echo "${SSH_PKEY}" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H "${SSH_HOST}" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

.build docker: &build_docker_images
  before_script:
    - cp $(pwd)/${ENV_FILE}  $(pwd)/.env.production.local
    - echo "$DOCKER_REGISTRY_PASSWORD" | docker login $DOCKER_REGISTRY -u $DOCKER_REGISTRY_USER --password-stdin
  script:
    - docker build --pull -t $DOCKER_IMAGE .
    - docker push $DOCKER_IMAGE

.deploy: &deploy
  <<: *setup_ssh
  script:
    - echo "deploying to ${PROJECT_ROOT}"
    - ssh "$SSH_USER@$SSH_HOST" "cd ${PROJECT_ROOT}
      && docker stack deploy -c stack.yml --with-registry-auth $STACK_NAME"

build-dev:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  only:
    - develop
  <<: *env_dev
  <<: *var_dev
  <<: *build_docker_images

deploy-dev:
  stage: deploy
  only:
    - develop
  <<: *env_dev
  <<: *var_dev
  <<: *deploy

build-prod:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  only:
    - master
  <<: *env_prod
  <<: *var_prod
  <<: *build_docker_images

deploy-prod:
  stage: deploy
  only:
    - master
  <<: *env_prod
  <<: *var_prod
  <<: *deploy
