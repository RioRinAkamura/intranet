image: node:14

cache:
  key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
  paths:
    - .npm/

stages:
  - install_dependencies
  - analysis
  - test
  - build
  - deploy
  
before_script:
  # - echo '@hdwebsoft:registry https://gitlab.com/api/v4/projects/${SDK_PROJECT_ID}/packages/npm/'>> .npmrc
  # - echo '//gitlab.example.com/api/v4/projects/${SDK_PROJECT_ID}/packages/npm/:_authToken=${SDK_DEPLOY_TOKEN}' >> .npmrc
  - npm config set @hdwebsoft:registry https://gitlab.com/api/v4/projects/${SDK_PROJECT_ID}/packages/npm/
  - npm config set -- '//gitlab.com/api/v4/projects/${SDK_PROJECT_ID}/packages/npm/:_authToken' ${SDK_DEPLOY_TOKEN}

  - npm ci --cache .npm --prefer-offline

install_dependencies:
  stage: install_dependencies
  script:
    - npm ci
  only:
    changes:
      - package-lock.json

tsc:
  stage: analysis
  allow_failure: true
  script:
    - npm run checkTs
  when: manual

lint:
  stage: analysis
  allow_failure: true
  script:
    - npm run lint
  when: manual

lint-css:
  stage: analysis
  allow_failure: true
  script:
    - npm run lint:css
  when: manual

test:
  stage: test
  allow_failure: true
  script:
    - npm run test
  when: manual

build:
  stage: build
  only:
    - develop
  when: manual
  script:
    - npm install
    - npm run build
    - tar cvzf build.tar.gz build
  artifacts:
    paths:
      - build.tar.gz

deploy-dev:
  stage: deploy
  only:
    - develop
  variables:
    SSH_HOST: $DEV_HOST
    SSH_USER: $DEV_SSH_USER
    SSH_PKEY: $DEV_SSH_KEY
    PROJECT_ROOT: /var/www/html/react-boilerplate/
    
  before_script:
    - which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )
    - eval $(ssh-agent -s)
    - echo "$SSH_PKEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H "$SSH_HOST" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts

  script:
    - echo "deploying to ${PROJECT_ROOT}"
    - scp package.json "${SSH_USER}@${SSH_HOST}:${PROJECT_ROOT}"
    - ssh "${SSH_USER}@${SSH_HOST}"  "cd ${PROJECT_ROOT}
      && rm -rf build
      && tar xvzf build.tar.gz
      && rm -f build.tar.gz"
  # needs:
  #   - job: build
  #     artifacts: true
